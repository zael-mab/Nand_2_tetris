// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load , sel=address[9..11], a=xx, b=yy, c=zz, d=ww, e=rr, f=qq, g=mm, h=nn);
    
    RAM512(in=in, load=xx, address=address[0..8], out=x);
    RAM512(in=in, load=yy, address=address[0..8], out=y);
    RAM512(in=in, load=zz, address=address[0..8], out=z);
    RAM512(in=in, load=ww, address=address[0..8], out=w);
    RAM512(in=in, load=rr, address=address[0..8], out=r);
    RAM512(in=in, load=qq, address=address[0..8], out=q);
    RAM512(in=in, load=mm, address=address[0..8], out=m);
    RAM512(in=in, load=nn, address=address[0..8], out=n);

    Mux8Way16(a=x, b=y, c=z, d=w, e=r, f=q, g=m, h=n, sel=address[9..11],out=out);
}